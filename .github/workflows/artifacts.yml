name: artifacts

on:
  release:
    types: [created]

jobs:
  release_linux:
    name: Release Vili Linux package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: friendlyanon/setup-vcpkg@v1
      with:
        committish: master
    - name: Create build directory
      run: mkdir build
    - name: Aptitude update
      run: sudo apt-get update
    - name: Install CMake
      run: sudo apt-get install -y cmake
    - name: Install G++ and build-essential
      run: sudo apt-get install -y build-essential g++
    - name: Install git
      run: sudo apt-get install -y git
    - name: Compile Vili
      run: cd build; cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ..; make -j8
    # - name: Run tests
    #   run: ./build/tests/tests
    - name: Create release directory
      run: mkdir release
    - name: Create package
      run: cp -r include/ release/; cp ./build/libvili.a release/
    - name: Package to archive
      run: tar -cvf vili-dev.tar release/ ; gzip -9 vili-dev.tar
    - name: Upload Release Asset
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vili-dev.tar.gz
        asset_name: vili-dev.linux64.tar.gz
        asset_content_type: application/zip


  release_windows:
    name: Release Vili Windows package
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: friendlyanon/setup-vcpkg@v1
      with:
        committish: master
    - name: Create build directory
      run: mkdir build
    - name: Run CMake on Vili
      run: cd build; cmake -G "Visual Studio 16 2019" -A x64 -DBUILD_TESTS=ON ..
      shell: pwsh
    - name: Compile Vili
      run: cmake --build build --config Release -- /m:8
    # - name: Run tests
    #   run: ./build/tests/Release/tests.exe
    - name: Create release directory
      run: mkdir release
    - name: Create package
      run: cp -r include/ release/; cp ./build/Release/vili.lib ./release/
      shell: pwsh
    - name: Package to archive
      run: Compress-Archive -path ./release/* -destinationpath vili-dev.zip -compressionlevel optimal
    - name: Upload Release Asset
      id: upload-release-asset-win
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vili-dev.zip
        asset_name: vili-dev.win64.zip
        asset_content_type: application/zip


  release_macos:
    name: Release Vili MacOS package
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: friendlyanon/setup-vcpkg@v1
      with:
        committish: master
    - name: Create build directory
      run: mkdir build
    - name: Run CMake on Vili
      run: cd build && cmake -DBUILD_TESTS=ON ..
    - name: Compile Vili
      run: cd build && make -j8
    # - name: Run tests
    #   run: cd build && ./tests/tests
    - name: Create release directory
      run: mkdir release
    - name: Create package
      run: cp -r include/ release/; cp ./build/libvili.a release/
    - name: Package to archive
      run: tar -cvf vili-dev.tar release/ ; gzip -9 vili-dev.tar
    - name: Upload Release Asset
      id: upload-release-asset-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vili-dev.tar.gz
        asset_name: vili-dev.macos64.tar.gz
        asset_content_type: application/zip
